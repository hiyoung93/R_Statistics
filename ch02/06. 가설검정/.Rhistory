## 1-1
# 대중교통 n명 중 임의 추출 50% 대중교통 이용
# 대중교통 이용학생비율 p일때 신뢰도 95% 신뢰구간 구하기
n <- 1:100
z <- qnorm(1-(alpha/2))
alpha <- 0.05
####### 모비율 ########
## 1-1
# 대중교통 n명 중 임의 추출 50% 대중교통 이용
# 대중교통 이용학생비율 p일때 신뢰도 95% 신뢰구간 구하기
phat <- 0.5
alpha <- 0.05
n <- 1:100
z <- qnorm(1-(alpha/2))
ll <- phat - z*sqrt(phat*(1-phat)/n)
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat - z*sqrt(phat*(1-phat)/n)
c.i <- c(ll,ul)
c.i <- c(ll,ul);c.i
c.i <- c(ll,ul); mean(c.i)
####### 모비율 ########
## 1-1
# 대중교통 n명 중 임의 추출 50% 대중교통 이용
# 대중교통 이용학생비율 p일때 신뢰도 95% 신뢰구간 구하기
(p.hat <- 0.5)
(alpha <- 0.05)
(n <- 100)
(z <- qnorm(1-(alpha/2)))
ll <- p.hat - z*sqrt(p.hat*(1-p.hat)/n)
ul <- p.hat + z*sqrt(p.hat*(1-p.hat)/n)
(c.i <- c(ll,ul))
(c.i <- c(ll,ul))
(phat <- 0.8) # 임의추출한 50%
(alpha <- 0.05) # 신뢰구간
(n <- 1:1000) # 이용학생수
(z <- qnorm(1-(alpha/2))) # 구간추출
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat - z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))
(n <- 1:100) # 이용학생수
(z <- qnorm(1-(alpha/2))) # 구간추출
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat - z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))
## 1-2
# 100명 임의추출후 메뉴에 대한 반응 조사 4/5 선호,
# 전체고객 모비율 p, 에 대한 신뢰도 95%신뢰구간 구하기
# 전체고객 - 1000, 신뢰도 - 0.05 ,모비율은 어디 넣어야 하는건가욤..?
phat <- 0.8
(phat <- 0.8) # 임의추출한 50%
(alpha <- 0.05) # 신뢰구간
(n <- 1:100) # 이용학생수
(z <- qnorm(1-(alpha/2))) # 구간추출
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat - z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))
(c.i <- c(ll,ul))
c.i
(c.i <- c(ll,ul))
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat - z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))
####### 모비율 ########
## 1-1
# 대중교통 n명 중 임의 추출 50% 대중교통 이용
# 대중교통 이용학생비율 p일때 신뢰도 95% 신뢰구간 구하기
(phat <- 0.5) # 임의추출한 50%
(alpha <- 0.05) # 신뢰구간
(n <- 1:100) # 이용학생수
(z <- qnorm(1-(alpha/2))) # 구간추출
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat - z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))
(p.hat <- 0.5)
(alpha <- 0.05)
(n <- 100)
(z <- qnorm(1-(alpha/2)))
ll <- p.hat - z*sqrt(p.hat*(1-p.hat)/n)
ul <- p.hat + z*sqrt(p.hat*(1-p.hat)/n)
(c.i <- c(ll,ul))
####### 모비율 ########
## 1-1
# 대중교통 n명 중 임의 추출 50% 대중교통 이용
# 대중교통 이용학생비율 p일때 신뢰도 95% 신뢰구간 구하기
(phat <- 0.5) # 임의추출한 50%
(alpha <- 0.05) # 신뢰구간
(n <- 100) # 이용학생수
(z <- qnorm(1-(alpha/2))) # 구간추출
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat - z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))
(phat <- 0.8) # 임의추출한 50%
(alpha <- 0.05) # 신뢰구간
(n <- 1000) # 이용학생수
(z <- qnorm(1-(alpha/2))) # 구간추출
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat - z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))
ul <- phat + z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))
ul <- phat + z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))
(alpha <- 0.1)           # 신뢰구간
(n <- 430)               # 이용학생수
(z <- qnorm(1-(alpha/2))) # 구간추출
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat + z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))         # 최빈값도출
(alpha <- 0.1)            # 신뢰구간
(n <- 430)                # 흡연자
(x <- 1000)               # 총인원
(z <- qnorm(1-(alpha/2))) # 구간추출
ll <- phat - z*sqrt(phat*(1-phat)/n)
ul <- phat + z*sqrt(phat*(1-phat)/n)
(c.i <- c(ll,ul))         # 최빈값도출
ul <- phat + z*sqrt(phat*(1-phat)/x)
ll <- phat - z*sqrt(phat*(1-phat)/x)
(c.i <- c(ll,ul))         # 최빈값도출
## 1-3
# 1000명 무작위 조사, 430명 흡연,흡연율(모비율)에대한
# 90% 신뢰구간 추정
(phat <- n/x)
ll <- phat - z*sqrt(phat*(1-phat)/x)
ul <- phat + z*sqrt(phat*(1-phat)/x)
(c.i <- c(ll,ul))         # 최빈값도출
########### 1-sample T테스트########
##2-1 수명이1000시간인 건전지, 무작위로 뽑은 10개에 대한 수명
n <-  980, 1008, 968, 1032, 1012, 996, 1021, 1002, 996, 1017
########### 1-sample T테스트########
##2-1 수명이1000시간인 건전지, 무작위로 뽑은 10개에 대한 수명
n <-  c(980, 1008, 968, 1032, 1012, 996, 1021, 1002, 996, 1017)
t.test(n, mu=2800, alternative = 'greater')
## 2-2 수학평균 55점, 학생 성적은 올랐다고 할수 있을까?
n <- c(58, 49, 39, 99, 32, 88, 62, 30, 55, 65, 44, 55, 57, 53, 88, 42, 39)
t.test(n, mu=2800, alternative = 'greater')
## 2-3 2006년도 1인1일 평균 섭취8.1g이다.
# 2008년도 무작위는 달라졌는가?
n <- c(15.50, 11.21, 12.67, 8.87, 12.15, 9.88, 2.06, 14.50, 0, 4.97)
t.test(n, mu=8.1, alternative = 'greater')
t.test(n, mu=55, alternative = 'greater')
t.test(n, mu=1000, alternative = 'greater')
########### 1-sample T테스트########
##2-1 수명이1000시간인 건전지, 무작위로 뽑은 10개에 대한 수명
n <-  c(980, 1008, 968, 1032, 1012, 996, 1021, 1002, 996, 1017)
t.test(n, mu=1000, alternative = 'greater')
## 2-2 수학평균 55점, 학생 성적은 올랐다고 할수 있을까?
n <- c(58, 49, 39, 99, 32, 88, 62, 30, 55, 65, 44, 55, 57, 53, 88, 42, 39)
t.test(n, mu=55, alternative = 'greater')
## 2-3 2006년도 1인1일 평균 섭취8.1g이다.
# 2008년도 무작위는 달라졌는가?
n <- c(15.50, 11.21, 12.67, 8.87, 12.15, 9.88, 2.06, 14.50, 0, 4.97)
t.test(n, mu=8.1, alternative = 'greater')
########### 1-sample T테스트########
##2-1 수명이1000시간인 건전지, 무작위로 뽑은 10개에 대한 수명
n <-  c(980, 1008, 968, 1032, 1012, 996, 1021, 1002, 996, 1017)
# 의 샘플은 모집단과 같은가? mu - 1000
t.test(n, mu=1000)
########### 1-sample T테스트########
##2-1 수명이1000시간인 건전지, 무작위로 뽑은 10개에 대한 수명
n <-  c(980, 1008, 968, 1032, 1012, 996, 1021, 1002, 996, 1017)
# 의 샘플은 모집단과 같은가? mu - 1000
t.test(n, mu=1000)
########### 1-sample T테스트########
##2-1 수명이1000시간인 건전지, 무작위로 뽑은 10개에 대한 수명
n <-  c(980, 1008, 968, 1032, 1012, 996, 1021, 1002, 996, 1017)
# 의 샘플은 모집단과 같은가? mu - 1000
t.test(n, mu=1000)
## 2-2 수학평균 55점, 학생 성적은 올랐다고 할수 있을까?
n <- c(58, 49, 39, 99, 32, 88, 62, 30, 55, 65, 44, 55, 57, 53, 88, 42, 39)
t.test(n, mu=55, alternative = 'greater')
## 2-3 2006년도 1인1일 평균 섭취8.1g이다.
# 2008년도 무작위는 달라졌는가?
n <- c(15.50, 11.21, 12.67, 8.87, 12.15, 9.88, 2.06, 14.50, 0, 4.97)
t.test(n, mu=8.1, alternative = 'greater')
setwd()
getwd()
getwd()
setwd('D:/workspace/R_statictics/ch02/06. 가설검정')
data <- read.table('/data/chapter7.txt',header=T)
data <- read.table('data/chapter7.txt',header=T)
var.test(data$weight ~data$gender)
boy <- subset(data, 'gender'==1)
boy <- subset(data, 'gender'==1);boy
boy <- subset(data, 'gender'==1); boy
data <- read.table('data/chapter7.txt',header=T)
boy <- subset(data, 'gender'==1); boy
var.test(data$weight ~data$gender)
boy <- subset(data, gender==1); boy
girl <- subset(data, gender==2)
var.test(data$weight ~data$gender)
# 정규성 테스트
shapiro.test(boy$wright)
# 정규성 테스트
shapiro.test(boy$weight)
shapiro.test(girl$weight)
qqnorm(girl$weight)
qqline(girl$weight)
qqnorm(boy$weight)
qqline(boy$weight)
iriss <- subset(iris, Species=='setosa')
shapiro.test(iriss$Sepal.Length)
qqnorm(iriss$Sepal.Length)
qqline(iriss$Sepal.Length)
shapiro.test(iriss$Petal.Width)
qqnorm(iriss$Petal.Width)
qqline(iriss$Petal.Width)
shapiro.test(iriss$Petal.Width)
t.test(data$weight~data$gender,
mu=0, alternative='less', var.equal=T)
var.test(data$weight ~ data$gender)
# R을 이용한 검정 2-sample T test
t.test(data$weight~data$gender,
mu=0, alternative='less', var.equal=T)
# 데이터 조작하기기
data2 <- data.frame(gender=c(1,1), weight=c(3350, 3380))
data <- data.frame(data.data2)
data <- data.frame(data, data2)
data
install.packages("pairdata")
install.packages("paireData")
install.packages("PaireData")
library(PaireData)
install.packages("PaireData")
install.packages("PairedData")
library(PairedData)
data(Anorexia)
data <- Anorexia
str(data)
summary(data)
describe(data)
describe(data)
describe(data)
data <- Anorexia
str(data)
summary(data)
describe(data)
describe(data)
install.packages("psych")
library(PairedData)
library(psych)
library(PairedData)
library(ggplot2)
data(Anorexia)
data <- Anorexia
str(data)
summary(data)
describe(data)
n <- length(data$Prior - data$Post)
m <- mean(data$Prior - data$Post)
s <- sd(data$Prior - data$Post)
t.t <- m/(s/sqrt(n))
t.test(data$Prior)
t.test(data$Prior, data$Post, paired=T, alternative = "less")
alpha <- 0.05
qt(alpha, df=16)
pt(t.t, df=16)
t.test(data$Prior, data$Post, paired=T, alternative = "less")
# mtcars (am.오토/수동) mpg차이가 통계적으로 유의한가?(t-test활용)
str(mtcars)
View(mtcars)
# MASSPackages중 Cars93 dataframe
# Origin USA vs non-USA Price의 평균차이의 검증
MASS
# MASSPackages중 Cars93 dataframe
# Origin USA vs non-USA Price의 평균차이의 검증
Mass
# MASSPackages중 Cars93 dataframe
# Origin USA vs non-USA Price의 평균차이의 검증
str(Mass)
# MASSPackages중 Cars93 dataframe
# Origin USA vs non-USA Price의 평균차이의 검증
library(Mass)
# MASSPackages중 Cars93 dataframe
# Origin USA vs non-USA Price의 평균차이의 검증
library(MASS)
str(MASS)
str(Cars93)
head(Cars93)
var.test(Cars93$Origin USA ~Cars93$non-USA)
var.test(Cars93$OriginUSA ~Cars93$non-USA)
var.test(Cars93$Origin_USA ~Cars93$non-USA)
var.test(Cars93$Origin-USA ~Cars93$non-USA)
View(Cars93)
var.test(Cars93$(Origin=c(USA)) ~Cars93$(Origin=c(non-USA))
var.test(Cars93$(Origin=c(USA)) ~Cars93$(Origin=c(non-USA)))
yes <- subset(Cars93, USA==1)
none <- subset(Cars93, non-USA==2)
yes <- subset(Cars93, USA==1)
yes <- subset(Cars93,Origin == USA)
none <- subset(Cars93,Origin == 2)
yes <- subset(Cars93,Origin == 1)
yes <- subset(Cars93,Origin == 1)
none <- subset(Cars93,Origin == 2)
View(none)
var.test(data$yes ~data$none)
# MASSPackages중 Cars93 dataframe
# Origin USA vs non-USA Price의 평균차이의 검증
library(MASS)
str(Cars93)
View(Cars93)
View(Cars93)
var.test(Cars93$price ~Cars93$Origin)
var.test(Cars93$Price ~Cars93$Origin)
View(mtcars)
t.test(mtcars$am~mtcars$mpg,
mu=0, alternative='less', var.equal=T)
t.test(mtcars$mpg ~ mtcars$am,
mu=0, alternative='less', var.equal=T)
## mpg
# 3-1 subcompact자동차와 midsize자동차의 고속도로 연비
str(mpg)
## mpg
# 3-1 subcompact자동차와 midsize자동차의 고속도로 연비
str(mpg)
## mpg
# 3-1 subcompact자동차와 midsize자동차의 고속도로 연비
View(mpg)
var.test(mpg$class ~mpg$class)
var.test(mpg$class(subcompact) ~ mpg$class(midsize))
str(Cars93)
View(Cars93)
var.test(Cars93$Price ~Cars93$Origin)
m <- subset(mpg,class=='subcompact')
s<- subset(mpg,class=='subcompact')
s<- subset(mpg,class=='subcompact')
m <- subset(mpg,class=='midsize')
View(iris)
shapiro.test(s$hwy)
shapiro.test(s$cwy)
shapiro.test(s$cty)
shapiro.test(m$hwy)
shapiro.test(m$cty)
# 3-2 r과 P의 도시연비
shapiro.test(s$cty)
shapiro.test(m$cty)
# 3-2 r과 P의 도시연비
r<- subset(mpg,fl=='r')
p <- subset(mpg,fl=='p')
shapiro.test(r$cty)
shapiro.test(p$cty)
# 3-3 subcompact의 f or r 에 따른 도시연비
shapiro.test(p$r)
shapiro.test(s$hwy)
shapiro.test(m$hwy)
# 3-2 r(일반휘발유)과 P(고급휘발유)의 도시연비 검정(colunms - fl)
r<- subset(mpg,fl=='r')
p <- subset(mpg,fl=='p')
shapiro.test(r$cty)
shapiro.test(p$cty)
shapiro.test(p$f)
# 3-3 subcompact의 f(전륜구동) or r(후륜구동) 에 따른 도시연비 검정(colunms - drv)
R <- subset(mpg,drv=='r')
f <- subset(mpg,drv=='f')
shapiro.test(R$s)
data <- select(mpg$class)
data <- select(class$subcompact)
data <- subset(mpg,class == subcompact)
data <- subset(mpg,class == subcompact)
data <- subset(mpg,class == 'subcompact')
data
shapiro.test(data$R)
t.test(data$R, data$f, paired = T, alternative = 'less')
# 3-3 subcompact의 f(전륜구동) or r(후륜구동) 에 따른 도시연비 검정(colunms - drv)
R <- subset(mpg,drv=='r')
f <- subset(mpg,drv=='f')
data <- subset(mpg,class == 'subcompact')
t.test(data$R, data$f, paired = T, alternative = 'less')
data <- subset(mpg,class == 'subcompact')
t.test(data$R, data$f, paired = T, alternative = 'less')
s<- subset(mpg,class=='subcompact')
m <- subset(mpg,class=='midsize')
t.test(s$hwy, m$hwy, paried=T, alternative = "less")
t.test(r$cty, p$cty, paried=T, alternative = "less")
R
# 3-3 subcompact의 f(전륜구동) or r(후륜구동) 에 따른 도시연비(cty) 검정(colunms - drv)
R <- subset(data,drv=='r')
f <- subset(data,drv=='f')
t.test(data$R, data$f, paired = T, alternative = 'less')
# 3-3 subcompact의 f(전륜구동) or r(후륜구동) 에 따른 도시연비(cty) 검정(colunms - drv)
data <- subset(mpg,class == 'subcompact')
R <- subset(data,drv=='r')
f <- subset(data,drv=='f')
t.test(data$R, data$f, paired = T, alternative = 'less')
t.test(data$f, data$R, paired = T, alternative = 'less')
t.test(data$cty, data$cty, paired = T, alternative = 'less')
shapiro.test(R$cty)
shapiro.test(f$cty)
cty1 <- shapiro.test(R$cty)
cty2 <- shapiro.test(f$cty)
t.test(data$cty1, data$cty2, paired = T, alternative = 'less')
# 3-3 subcompact의 f(전륜구동) or r(후륜구동) 에 따른 도시연비(cty) 검정(colunms - drv)
data <- subset(mpg,class == 'subcompact')
R <- subset(data,drv=='r')
f <- subset(data,drv=='f')
cty1 <- shapiro.test(R$cty)
cty2 <- shapiro.test(f$cty)
t.test(data$cty1, data$cty2, paired = T, alternative = 'less')
cty1
R <- subset(data,drv=='r')
f <- subset(data,drv=='f')
R
data
R
f
shapiro.test(R$cty)
shapiro.test(f$cty)
str(mtcars)
View(mtcars)
t.test(mtcars$mpg ~ mtcars$am,
mu=0, alternative='less', var.equal=T)
library(MASS)
str(Cars93)
var.test(Cars93$Price ~Cars93$Origin)
str(mtcars)
View(mtcars)
t.test(mtcars$mpg ~ mtcars$am,
mu=0, alternative='less', var.equal=T)
View(mtcars)
auto <- subset(mtcars, am==0)
manual <- subset(mtcars, am==1)
shapiro.test(auto$mpg)
shapiro.test(manual$mpg)
qqnorm(auto$mpg)
qqline(auto$mpg)
qqnorm(manual$mpg)
qqline(manual$mpg)
t.test(mtcars$mpg ~ mtcars$am,
mu=0, alternative='less', var.equal=T)
str(Cars93)
var.test(Cars93$Price ~Cars93$Origin)
var.test(Cars93$Price ~Cars93$Origin)
s<- subset(mpg,class=='subcompact')
m <- subset(mpg,class=='midsize')
shapiro.test(s$hwy)
shapiro.test(m$hwy)
t.test(s$hwy, m$hwy, paried=T, alternative = "less")
t.test(hwy$s, hwy$m, paried=T, alternative = "less")
t.test(s$hwy, m$hwy, paried=T, alternative = "less")
s <- subset(mpg,class=='subcompact')
m <- subset(mpg,class=='midsize')
shapiro.test(s$hwy)
shapiro.test(m$hwy)
t.test(s$hwy, m$hwy, paried=T, alternative = "less")
# 정규성을 띈다
qqnorm(s$hwy)
s <- subset(mpg,class=='subcompact')
m <- subset(mpg,class=='midsize')
shapiro.test(s$hwy)
shapiro.test(m$hwy)
# 정규성을 띈다
qqnorm(s$hwy)
qqline(s$hwy)
# 정규성을 띄지 않는다
qqnorm(m$hwy)
qqline(m$hwy)
t.test(s$hwy, m$hwy, paried=T, alternative = "less")
t.test(s$hwy, m$hwy, alternative = "less")
head(mpg)
mpg
library(ggplot2)
mpg
t.test(s$hwy, m$hwy, alternative = "less")
t.test(r$cty, p$cty, paried=T, alternative = "less")
mean(Cars93$Origin == 'USA')
usa<- mean(Cars93$Origin == 'USA')
mean(Cars93$Origin == 'non-USA')
non<- mean(Cars93$Origin == 'non-USA')
usa
shapiro.test(Cars93$Price[Cars93$Origin=="non-USA"])
shapiro.test(Cars93$Price[Cars93$Origin=="USA"])
usa<- shapiro.test(Cars93$Price[Cars93$Origin=="USA"])
non<- shapiro.test(Cars93$Price[Cars93$Origin=="non-USA"])
# 정규성을 띈다
qqnorm(usa)
qqline(usa)
usa<- shapiro.test(Cars93$Price[Cars93$Origin=="USA"])
non<- shapiro.test(Cars93$Price[Cars93$Origin=="non-USA"])
# 정규성을 띈다
qqnorm(usa)
qqline(usa)
str(Cars93)
usa<- shapiro.test(Cars93$Price[Cars93$Origin=="USA"])
non<- shapiro.test(Cars93$Price[Cars93$Origin=="non-USA"])
# 정규성을 띈다
qqnorm(usa)
qqline(usa)
# 정규성을 띈다
qqnorm(Cars93$Price[Cars93$Origin=="USA"])
qqline(Cars93$Price[Cars93$Origin=="USA"])
# 정규성을 띄지 않는다
qqnorm(Cars93$Price[Cars93$Origin=="non-USA"])
qqline(Cars93$Price[Cars93$Origin=="non-USA"])
# 3-2 r(일반휘발유)과 P(고급휘발유)의 도시연비(cty) 검정(colunms - fl)
r<- subset(mpg,fl=='r')
p <- subset(mpg,fl=='p')
shapiro.test(r$cty)
shapiro.test(p$cty)
t.test(r$cty, p$cty, paried=T, alternative = "less")
# 3-3 subcompact의 f(전륜구동) or r(후륜구동) 에 따른 도시연비(cty) 검정(colunms - drv)
data <- subset(mpg,class == 'subcompact')
R <- subset(data,drv=='r')
f <- subset(data,drv=='f')
shapiro.test(R$cty)
shapiro.test(f$cty)
t.test(R$cty, f$cty, paried=T, alternative = "less")
# 3-3 subcompact의 f(전륜구동) or r(후륜구동) 에 따른 도시연비(cty) 검정(colunms - drv)
data <- subset(mpg,class == 'subcompact')
R <- subset(data,drv=='r')
f <- subset(data,drv=='f')
shapiro.test(R$cty)
shapiro.test(f$cty)
t.test(R$cty, f$cty, paried=T, alternative = "less")
